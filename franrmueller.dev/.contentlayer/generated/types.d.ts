// NOTE This file is auto-generated by Contentlayer

import type { Markdown, MDX, ImageFieldData, IsoDateTimeString } from 'contentlayer/core'
import * as Local from 'contentlayer/source-files'

export { isType } from 'contentlayer/client'

export type { Markdown, MDX, ImageFieldData, IsoDateTimeString }

/** Document types */
export type Moc = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Moc'
  title: string
  summary?: string | undefined
  mocOf?: string[] | undefined
  tags?: string[] | undefined
  /** MDX file body */
  body: MDX
  slug: string
  url: string
  tagsLower: list
}

export type Note = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Note'
  title: string
  summary?: string | undefined
  tags?: string[] | undefined
  status: 'draft' | 'published'
  updated?: IsoDateTimeString | undefined
  aliases?: string[] | undefined
  stage: 'seed' | 'budding' | 'evergreen'
  cover?: string | undefined
  /** MDX file body */
  body: MDX
  slug: string
  url: string
  tagsLower: list
}

export type Post = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Post'
  title: string
  summary?: string | undefined
  date: IsoDateTimeString
  readingTime?: number | undefined
  tags?: string[] | undefined
  status: 'draft' | 'published'
  cover?: string | undefined
  /** MDX file body */
  body: MDX
  slug: string
  url: string
  tagsLower: list
}

export type Reference = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Reference'
  title: string
  author?: string | undefined
  year?: number | undefined
  sourceUrl?: string | undefined
  summary?: string | undefined
  tags?: string[] | undefined
  /** MDX file body */
  body: MDX
  slug: string
  url: string
  tagsLower: list
}  

/** Nested types */
  

/** Helper types */

export type AllTypes = DocumentTypes | NestedTypes
export type AllTypeNames = DocumentTypeNames | NestedTypeNames

export type DocumentTypes = Moc | Note | Post | Reference
export type DocumentTypeNames = 'Moc' | 'Note' | 'Post' | 'Reference'

export type NestedTypes = never
export type NestedTypeNames = never

export type DataExports = {
  allDocuments: DocumentTypes[]
  allNotes: Note[]
  allPosts: Post[]
  allMocs: Moc[]
  allReferences: Reference[]
}


export interface ContentlayerGenTypes {
  documentTypes: DocumentTypes
  documentTypeMap: DocumentTypeMap
  documentTypeNames: DocumentTypeNames
  nestedTypes: NestedTypes
  nestedTypeMap: NestedTypeMap
  nestedTypeNames: NestedTypeNames
  allTypeNames: AllTypeNames
  dataExports: DataExports
}

declare global {
  interface ContentlayerGen extends ContentlayerGenTypes {}
}

export type DocumentTypeMap = {
  Moc: Moc
  Note: Note
  Post: Post
  Reference: Reference
}

export type NestedTypeMap = {

}

 